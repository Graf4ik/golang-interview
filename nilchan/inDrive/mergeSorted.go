package inDrive

import (
	"fmt"
)

// –°–ª–æ–∂–∏—Ç—å –¥–≤–∞ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–∞—Å—Å–∏–≤–∞

func main() {
	var a = []int{1, 5, 6, 18, 99}
	var b = []int{2, 4, 9, 11}

	fmt.Println(mergeSorted(a, b))
}

func mergeSorted(a []int, b []int) []int {
	res := make([]int, 0, len(a)+len(b))

	i, j := 0, 0

	for i < len(a) && j < len(b) {
		if a[i] < b[j] {
			res = append(res, a[i])
			i++
		} else {
			res = append(res, b[j])
			j++
		}
	}

	// –¥–æ–±–∞–≤–ª—è—é—Ç –æ—Å—Ç–∞—Ç–∫–∏ –∏–∑ a –∏–ª–∏ b, –µ—Å–ª–∏ –æ–¥–∏–Ω –∏–∑ –º–∞—Å—Å–∏–≤–æ–≤ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è —Ä–∞–Ω—å—à–µ –¥—Ä—É–≥–æ–≥–æ.
	res = append(res, a[i:]...) // üîπ –≠—Ç–æ –∑–Ω–∞—á–∏—Ç: "–≤—Å—Ç–∞–≤—å –≤ res –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ first, –Ω–∞—á–∏–Ω–∞—è —Å –∏–Ω–¥–µ–∫—Å–∞ i"
	res = append(res, b[j:]...)

	return res
}

/*
–≠—Ç–æ—Ç –ø–æ–¥—Ö–æ–¥:

–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –∑–Ω–∞–Ω–∏–µ, —á—Ç–æ a –∏ b –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã.
–ù–µ —Ç—Ä–µ–±—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.
–†–∞–±–æ—Ç–∞–µ—Ç –∑–∞ O(n + m) –∏ –±–µ–∑ –ª–∏—à–Ω–∏—Ö –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–π –∏ –Ω—É–ª–µ–π.
*/
