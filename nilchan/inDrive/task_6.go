package inDrive

import (
	"fmt"
	"sync"
	"time"
)

// –ï—Å—Ç—å 3 –≥–æ—Ä—É—Ç–∏–Ω—ã, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∑–∞–ø—É—Å–∫ run
// –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å —á—Ç–æ–±—ã —Ñ—É–Ω–∫—Ü–∏—è steady –ø–æ –∫–æ–º–∞–Ω–¥–µ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–∞–ª–∞ –≤—ã–ø–æ–ª–µ–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç—Ä–µ—Ö run?

var (
	mu   sync.Mutex
	cond = sync.NewCond(&mu)
)

// var start = make(chan struct{})

func main() {
	go ready(1)
	go ready(2)
	go ready(3)

	time.Sleep(1 * time.Second) // –∏–º–∏—Ç–∞—Ü–∏—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏
	steady()
	time.Sleep(1 * time.Second) // –æ–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
}

// –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞: sync.WaitGroup + channel (–µ—Å–ª–∏ –Ω–µ —Ö–æ—á–µ—Ç—Å—è sync.Cond)

func steady() {
	fmt.Println("steady: –≥–æ—Ç–æ–≤ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å run()")
	cond.L.Lock()
	cond.Broadcast() // –ø—Ä–æ–±—É–∂–¥–∞–µ—Ç –≤—Å–µ—Ö
	cond.L.Unlock()

	// 	close(start) // –≤—Å–µ –≥–æ—Ä—É—Ç–∏–Ω—ã —É–≤–∏–¥—è—Ç –∑–∞–∫—Ä—ã—Ç–∏–µ –∫–∞–Ω–∞–ª–∞ –∏ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç
}

func ready(id int) {
	run(id)
}

func run(id int) {
	cond.L.Lock()
	cond.Wait() // –±–ª–æ–∫–∏—Ä—É–µ–º—Å—è –¥–æ —Å–∏–≥–Ω–∞–ª–∞
	cond.L.Unlock()

	// 	<-start
}

/*
sync.Cond –≤ Go ‚Äî —ç—Ç–æ —É—Å–ª–æ–≤–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –≥–æ—Ä—É—Ç–∏–Ω–∞–º:
–æ–∂–∏–¥–∞—Ç—å –Ω–∞—Å—Ç—É–ø–ª–µ–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è (Wait()),
–æ–ø–æ–≤–µ—â–∞—Ç—å –æ–¥–Ω—É (Signal()) –∏–ª–∏ –≤—Å–µ (Broadcast()) –æ–∂–∏–¥–∞—é—â–∏–µ –≥–æ—Ä—É—Ç–∏–Ω—ã –æ —Ç–æ–º, —á—Ç–æ —Å–æ–±—ã—Ç–∏–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ.
–û–Ω–∞ –ø–æ—Ö–æ–∂–∞ –Ω–∞ –∫–æ–º–±–∏–Ω–∞—Ü–∏—é mutex + signal/wait, –∫–∞–∫ –≤ –¥—Ä—É–≥–∏—Ö —è–∑—ã–∫–∞—Ö.
üìå –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å sync.Cond
–ö–æ–≥–¥–∞ —É –≤–∞—Å –º–Ω–æ–≥–æ –≥–æ—Ä—É—Ç–∏–Ω –∂–¥—É—Ç –æ–¥–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã, –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö, –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–∞) ‚Äî –∏ –Ω—É–∂–Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —Ä–∞–∑–±—É–¥–∏—Ç—å –∏—Ö –≤—Å–µ –∏–ª–∏ –ø–æ –æ–¥–Ω–æ–π.
*/
