package inDrive

import (
	"fmt"
	"time"
)

// что выведет
var counter = 0

func main() {
	for i := 0; i < 10; i++ {
		go func() {
			counter++
		}()
	}
	time.Sleep(2 * time.Second)
	fmt.Println(counter)
}

/*
Что происходит:
В цикле создаются 10 горутин, каждая инкрементирует глобальную переменную counter.
time.Sleep(2 * time.Second) позволяет этим горутинам завершиться до вызова fmt.Println(counter).

Ключевой момент:
counter++ — неатомарная операция: она включает чтение, увеличение и запись, и не защищена синхронизацией (например, через sync.Mutex или atomic).

Возможные исходы:
counter может быть меньше 10 из-за data race — несколько горутин могут одновременно читать и перезаписывать counter, теряя значения.
В редких случаях он может быть равен 10, но это не гарантировано.
*/
