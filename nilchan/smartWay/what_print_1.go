package smartWay

import "fmt"

type account struct {
	value int
}

// что выведет в консоль
func main() {
	s1 := make([]account, 0, 2) // len 0 cap 2
	s1 = append(s1, account{})  // s1: [{0}] (len=1, cap=2)
	s2 := append(s1, account{}) // s2: [{0} {0}] (len=2, cap=2)
	// s2 создаётся на основе s1, в который добавляется второй элемент.
	// Поскольку вместимость s1 ещё 2, оба среза (s1 и s2) ссылаются на одну и ту же базу массива.

	acc := &s2[0]       //
	acc.value = 10      //  s2: [{10} {0}]
	fmt.Println(s1, s2) // что выведет s1 → [{10}], s2 → [{10} {0}]

	s1 = append(s2, account{}) // 3 4 // 10 0 0
	// s1: [{10} {0} {0}] (новый backing array)
	// s2: остаётся [{10} {0}] (старый backing array)
	// s2 имел capacity 2, но мы добавляем третий элемент — значит,
	// создаётся новый массив, и s1 теперь указывает на новый

	acc.value += 10 // 20 0 0
	// acc всё ещё указывает на s2[0], т.е. на старый массив

	fmt.Println(s1, s2) // что выведет // 10 0 0 // 20 0
	// s1 → [{10} {0} {0}]
	// s2 → [{20} {0}]
}
