package –ú–∞–≥–Ω–∏—Ç

// –ö–∞–∫–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ?
func main() {
	ch := make(chan int)

	for i := 0; i < 10; i++ {
		select {
		case x := <-ch:
			print(x)
		case ch <- i:
		}
	}
}

// ‚ùó –ì–¥–µ –ø—Ä–æ–±–ª–µ–º–∞?
// 1. –ö–∞–Ω–∞–ª ch ‚Äî –ø—É—Å—Ç–æ–π –≤ –Ω–∞—á–∞–ª–µ.
// –ü–µ—Ä–≤–∞—è –∏—Ç–µ—Ä–∞—Ü–∏—è: select –Ω–µ –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å x := <-ch, –ø–æ—Ç–æ–º—É —á—Ç–æ –Ω–∏–∫—Ç–æ –Ω–µ –ø–∏—à–µ—Ç –≤ –∫–∞–Ω–∞–ª.
// –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ –≤–æ–∑–º–æ–∂–Ω—ã–π –ø—É—Ç—å ‚Äî ch <- 0.
//
// 2. –ù–æ –∫—Ç–æ –±—É–¥–µ—Ç —á–∏—Ç–∞—Ç—å –∏–∑ –∫–∞–Ω–∞–ª–∞?
// –í—Ç–æ—Ä–∞—è –∏—Ç–µ—Ä–∞—Ü–∏—è: —Å–Ω–æ–≤–∞ select, –Ω–æ —Ç–µ–ø–µ—Ä—å –∫–∞–Ω–∞–ª —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ,
// –∞ –Ω–∏–∫—Ç–æ –µ–≥–æ –Ω–µ —á–∏—Ç–∞–µ—Ç ‚Äî —Å–ª–µ–¥—É—é—â–∞—è –ø–æ–ø—ã—Ç–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ –∫–∞–Ω–∞–ª –∑–∞–±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è.
//üí• –í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ:
// –ö–∞–∫ —Ç–æ–ª—å–∫–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –ø–æ–ø—ã—Ç–∫–∞ –∑–∞–ø–∏—Å–∞—Ç—å –≤–æ –≤—Ç–æ—Ä–æ–π —Ä–∞–∑ –≤ –∫–∞–Ω–∞–ª ch, –Ω–µ –±—É–¥–µ—Ç —á—Ç–µ–Ω–∏—è ‚Äî –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–∏—Å–Ω–µ—Ç (deadlock).

// ‚úÖ –ö–∞–∫ –∏–∑–±–µ–∂–∞—Ç—å –¥–µ–¥–ª–æ–∫–∞?
// –î–æ–±–∞–≤–∏—Ç—å –±—É—Ñ–µ—Ä –≤ –∫–∞–Ω–∞–ª:
//
// ch := make(chan int, 1)
// –†–∞–∑–¥–µ–ª–∏—Ç—å —á—Ç–µ–Ω–∏–µ –∏ –∑–∞–ø–∏—Å—å –Ω–∞ —Ä–∞–∑–Ω—ã–µ –≥–æ—Ä—É—Ç–∏–Ω—ã:
//
// go func() {
//	for {
//		ch <- i
//	}
// }()
//
// for {
//	select {
//	case x := <-ch:
//		print(x)
//	}
// }
