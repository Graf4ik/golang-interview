package –ú–∞–≥–Ω–∏—Ç

import "fmt"

// –ö–∞–∫–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ?
func work(done chan struct{}, out chan int) {
	for i := 1; i <= 10; i++ {
		out <- i
	}
	done <- struct{}{}
}

func main() {
	out := make(chan int)
	done := make(chan struct{})
	go work(done, out)

	<-done

	for n := range out {
		fmt.Println(n)
	}
}

// ‚ùó –ì–¥–µ –ø—Ä–æ–±–ª–µ–º–∞?
// –ö–∞–Ω–∞–ª out ‚Äî –Ω–µ–±—É—Ñ–µ—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π, –∞ –∑–Ω–∞—á–∏—Ç:
// work() –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª out, –ø–æ–∫–∞ –∫—Ç–æ-—Ç–æ –Ω–µ –Ω–∞—á–Ω—ë—Ç —á–∏—Ç–∞—Ç—å.
// –ù–æ main() –Ω–µ —á–∏—Ç–∞–µ—Ç out, –ø–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–∏—Ç done.
// work() –Ω–µ –º–æ–∂–µ—Ç –∑–∞–≤–µ—Ä—à–∏—Ç—å –∏ –ø–æ—Å–ª–∞—Ç—å done, –ø–æ–∫–∞ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤—Å–µ 10 —á–∏—Å–µ–ª –≤ out.

//üëâ –ü–æ–ª—É—á–∞–µ—Ç—Å—è –≤–∑–∞–∏–º–Ω–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞:
// main –∂–¥—ë—Ç done
// work –∂–¥—ë—Ç, –ø–æ–∫–∞ main –Ω–∞—á–Ω—ë—Ç —á–∏—Ç–∞—Ç—å –∏–∑ out

// ‚úÖ –ö–∞–∫ —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å?
// ‚úÖ –í–∞—Ä–∏–∞–Ω—Ç 1: –ó–∞–∫—Ä—ã—Ç—å –∫–∞–Ω–∞–ª out, –∫–æ–≥–¥–∞ –≤—Å—ë –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:
// func work(out chan int) {
//	 for i := 1; i <= 10; i++ {
//		 out <- i
//	 }
//	 close(out)
// }
//
// func main() {
//	 out := make(chan int)
//	 go work(out)
//
// 	for n := range out {
//	 	fmt.Println(n)
//	 }
//  }
// ‚úÖ –í–∞—Ä–∏–∞–Ω—Ç 2: –ß–∏—Ç–∞—Ç—å out –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π –≥–æ—Ä—É—Ç–∏–Ω–µ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å done –∫–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ:
