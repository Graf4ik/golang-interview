package main

import "fmt"

// Calling g.
// Printing in g 0
// Printing in g 1
// Printing in g 2
// Printing in g 3
// Panicking!
// Defer in g 3
// Defer in g 2
// Defer in g 1
// Recovered in f (0x137000,0xc000116060)
// Returned normally from f

// –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç
func main() {
	f()
	println("Returned normally from f")
}

func f() {
	defer func() {
		if r := recover(); r != nil {
			println("Recovered in f", r)
		}
	}()

	println("Calling g.")
	g(0)
	println("Returned normally from g")
}

func g(i int) {
	if i > 3 {
		println("Panicking!")
		panic(fmt.Sprintf("%v", i))
	}
	defer println("Defer in g", i)
	println("Printing in g", i)
	g(i + 1)
}

// üîç –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ —à–∞–≥–∞–º
// main() –≤—ã–∑—ã–≤–∞–µ—Ç f().
// f():
// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç defer —Å recover().
// –ü–µ—á–∞—Ç–∞–µ—Ç Calling g.
// –í—ã–∑—ã–≤–∞–µ—Ç g(0)
// g(i) ‚Äî —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –≤—ã–∑—ã–≤–∞–µ—Ç —Å–∞–º—É —Å–µ–±—è, –ø–æ–∫–∞ i > 3:
// i = 0: –ø–µ—á–∞—Ç–∞–µ—Ç "Printing in g 0", —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç defer, –≤—ã–∑—ã–≤–∞–µ—Ç g(1)
// i = 1: —Ç–æ –∂–µ —Å–∞–º–æ–µ
// i = 2: —Ç–æ –∂–µ —Å–∞–º–æ–µ
// i = 3: —Ç–æ –∂–µ —Å–∞–º–æ–µ
// i = 4: –ø–µ—á–∞—Ç–∞–µ—Ç "Panicking!", –≤—ã–∑—ã–≤–∞–µ—Ç panic(fmt.Sprintf("%v", i))
//
// üìå –ß—Ç–æ –¥–µ–ª–∞–µ—Ç panic
// –ö–æ–≥–¥–∞ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è panic(...), –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç –≤—ã—Ö–æ–¥ –∏–∑ –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π –≤–≤–µ—Ä—Ö –ø–æ —Å—Ç–µ–∫—É –≤—ã–∑–æ–≤–æ–≤.
// –ü—Ä–∏ —ç—Ç–æ–º –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –≤—Å–µ defer, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å.
// –ï—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏—Ç recover(), —Ç–æ panic –ø–æ–¥–∞–≤–ª—è–µ—Ç—Å—è.
//
// üß† –í–∞–∂–Ω–æ
// –í—Å–µ defer println(...) –≤–Ω—É—Ç—Ä–∏ g(...) –±—É–¥—É—Ç –≤—ã–∑–≤–∞–Ω—ã –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (–æ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—ã–∑–æ–≤–∞ –∫ –ø–µ—Ä–≤–æ–º—É).
// recover() —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –≤ f(), –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç –ø–∞–Ω–∏–∫—É –∏ –≤—ã–≤–µ–¥–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ.
