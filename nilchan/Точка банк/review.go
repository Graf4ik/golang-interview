package –¢–æ—á–∫–∞_–±–∞–Ω–∫

type Account struct {
	Id      int
	Name    string
	Balance float32
}

// —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–∫—Ä—ã—Ç–∞, –Ω–æ —Ç–∞–º —á—Ç–æ-—Ç–æ –≤—Ä–æ–¥–µ sqlx
type AccountRepository interface {
	Find(id int) (*Account, error)
	Save(acc *Account) error
}

// –≤ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ –∫–∞–∫–æ–π-—Ç–æ –±—Ä–æ–∫–µ—Ä, –Ω–æ –º–æ–∂–µ—Ç –∏ –±—ã—Ç—å http post
type EventSender interface {
	Send(event interface{}) error
}

type TransferEvent struct {
	FromId int
	ToId   int
	Amount float32
}

type AccountService struct {
	repository  AccountRepository
	eventSender EventSender
}

// –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ rest-–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
func (s *AccountService) Transfer(fromId int, toId int, amount float32) error {
	fromAcc, err := s.repository.Find(fromId)
	if err != nil {
		return err
	}
	toAcc, err := s.repository.Find(toId)
	if err != nil {
		return err
	}

	toAcc.Balance += amount
	fromAcc.Balance -= amount

	err = s.repository.Save(fromAcc)
	if err != nil {
		return err
	}
	err = s.repository.Save(toAcc)
	if err != nil {
		return err
	}
	go func() {
		s.eventSender.Send(&TransferEvent{
			FromId: fromId,
			ToId:   toId,
			Amount: amount,
		})
	}()
	return nil
}

// üîç 1. –ù–∞—Ä—É—à–µ–Ω–∏–µ –∞—Ç–æ–º–∞—Ä–Ω–æ—Å—Ç–∏ –∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è
// –ü—Ä–æ–±–ª–µ–º–∞:
// –í—ã —Å–Ω–∞—á–∞–ª–∞ –∏–∑–º–µ–Ω—è–µ—Ç–µ fromAcc –∏ toAcc, –∑–∞—Ç–µ–º –≤—ã–∑—ã–≤–∞–µ—Ç–µ Save –¥–≤–∞–∂–¥—ã.
// –ú–µ–∂–¥—É –¥–≤—É–º—è –≤—ã–∑–æ–≤–∞–º–∏ Save() –º–æ–∂–µ—Ç –ø—Ä–æ–∏–∑–æ–π—Ç–∏ –æ—à–∏–±–∫–∞, –∏ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –Ω–µ—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–µ–Ω—å–≥–∏ —Å–ø–∏—Å–∞–ª–∏—Å—å, –Ω–æ –Ω–µ –∑–∞—á–∏—Å–ª–∏–ª–∏—Å—å).
// üìå –†–µ—à–µ–Ω–∏–µ:
// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –≤ AccountRepository (–µ—Å–ª–∏ —ç—Ç–æ SQL).
// –í–≤–µ—Å—Ç–∏ TransferTx –∏–ª–∏ WithTx(func(r AccountRepository) error).
//
// üîç 2. –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –≥–æ–Ω–∫–∏ –ø—Ä–∏ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–≤–æ–¥–∞—Ö
// –ü—Ä–æ–±–ª–µ–º–∞:
// –ï—Å–ª–∏ –¥–≤–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Å –æ–¥–Ω–∏–º –∏ —Ç–µ–º –∂–µ –∞–∫–∫–∞—É–Ω—Ç–æ–º, –±–∞–ª–∞–Ω—Å –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ (classic race condition –ø—Ä–∏ read-modify-write).
//
// üìå –†–µ—à–µ–Ω–∏–µ:
//
// –ù–∞ —É—Ä–æ–≤–Ω–µ –±–∞–∑—ã: SELECT ... FOR UPDATE –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Å—Ç—Ä–æ–∫.
// –ò–ª–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –≤ Go: sync.Mutex –Ω–∞ Account.Id (–º–æ–∂–Ω–æ —Å sync.Map –∏ map[int]*sync.Mutex).
//
// üîç 3. –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–±—ã—Ç–∏–π ‚Äî –±–µ–∑ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
// –ü—Ä–æ–±–ª–µ–º–∞:
// –í—ã –≤—ã–∑—ã–≤–∞–µ—Ç–µ go s.eventSender.Send(...), –Ω–æ –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç–µ –æ—à–∏–±–∫—É, –Ω–µ –ª–æ–≥–∏—Ä—É–µ—Ç–µ, –Ω–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç–µ, –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ.
// üìå –†–µ—à–µ–Ω–∏–µ:
// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—á–µ—Ä–µ–¥—å/–±—É—Ñ–µ—Ä —Å–æ–±—ã—Ç–∏–π —Å retry, –ª–æ–≥–∞–º–∏ –∏ –∞–ª–µ—Ä—Ç–∞–º–∏.
// –ò–ª–∏ –≤ —Å–ª—É—á–∞–µ –Ω–µ-–∫—Ä–∏—Ç–∏—á–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π —Ö–æ—Ç—è –±—ã –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫—É:
// go func() {
//    if err := s.eventSender.Send(...); err != nil {
//        log.Printf("failed to send event: %v", err)
//    }
// }()
// üîç 4. –ù–µ–π–º–∏–Ω–≥: Save ‚Äî –Ω–µ—è—Å–Ω–æ, –æ–±–Ω–æ–≤–ª—è–µ—Ç –ª–∏ –∏–ª–∏ –≤—Å—Ç–∞–≤–ª—è–µ—Ç
// üìå –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:
// –°–¥–µ–ª–∞—Ç—å —è–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã Update(*Account) –∏ Insert(*Account), –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ.

// üîç 5. Float32 –¥–ª—è –¥–µ–Ω–µ–≥ ‚Äî –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è
// –ü—Ä–æ–±–ª–µ–º–∞:
// float32 (–∏ float64) –Ω–µ –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–µ–Ω–µ–≥ –∏–∑-–∑–∞ –ø–æ—Ç–µ—Ä—å —Ç–æ—á–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–µ.
// üìå –†–µ—à–µ–Ω–∏–µ:
// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å int64 –∏ —Ö—Ä–∞–Ω–∏—Ç—å —Å—É–º–º—É –≤ –∫–æ–ø–µ–π–∫–∞—Ö (—Ü–µ–Ω—Ç–∞—Ö).
// –ò–ª–∏ —Ç–∏–ø decimal.Decimal (–Ω–∞–ø—Ä–∏–º–µ—Ä, shopspring/decimal).
//
// üîç 6. –ü–ª–æ—Ö–∞—è —á–∏—Ç–∞–µ–º–æ—Å—Ç—å: –¥–ª–∏–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –±–µ–∑ —Ä–∞–∑–±–∏–≤–∫–∏
// üìå –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:
// –†–∞–∑–±–∏—Ç—å –º–µ—Ç–æ–¥ –Ω–∞ –ø–æ–¥–º–µ—Ç–æ–¥—ã:
// func (s *AccountService) Transfer(...) error {
//    fromAcc, toAcc, err := s.loadAccounts(fromId, toId)
//    ...
//    s.updateBalances(...)
//    ...
//    s.sendEventAsync(...)
// }
