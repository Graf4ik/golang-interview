package Иннотех

import "fmt"

// надо вернуть [1,2,3,5,7,8,11], при этом минимально аллоцировать память
func main() {
	var sl = []int{1, 2, 2, 3, 5, 7, 8, 8, 11}

	fmt.Println(removeDuplicates(sl))
}

func removeDuplicates(sl []int) []int {
	if len(sl) == 0 {
		return sl
	}

	// Пишем результат прямо в s1 (минимальная аллокация)
	j := 0
	for i := 1; i < len(sl); i++ {
		if sl[i] != sl[j] {
			j++
			sl[j] = sl[i]
		}
	}

	return sl[:j+1] // ты возвращаешь только уникальные элементы, которые были записаны в начало sl, от sl[0] до sl[j] включительно.
	// j + 1 - включительно, чтобы попали эл-ты
}

// j — индекс для уникального элемента.
// Если элемент sl[i] не равен sl[j], то он уникальный → кладём его в следующую позицию sl[j+1].

// Преимущества:
// Минимум аллокаций: результат пишется в исходный слайс.
// O(n) по времени.
// Без паники, надёжно.
