package main

import (
	"fmt"
	"sync"
)

// –≠—Ç–æ—Ç –∫–æ–¥ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è –∑–∞–≤–∏—Å–∞–Ω–∏–µ–º (deadlock), –ø–æ—Ç–æ–º—É —á—Ç–æ —Ç—ã
// –ø—ã—Ç–∞–µ—à—å—Å—è —á–∏—Ç–∞—Ç—å –∏–∑ –∫–∞–Ω–∞–ª–∞ ch, –∫–æ—Ç–æ—Ä—ã–π –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –±—É–¥–µ—Ç –∑–∞–∫—Ä—ã—Ç.
func main() {
	// –ö–∞–Ω–∞–ª —Å–æ–∑–¥–∞—ë—Ç—Å—è, –Ω–æ –Ω–µ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è –≤ –∫–æ–Ω—Ü–µ, –∞ range ch –∂–¥—ë—Ç –¥–æ –∑–∞–∫—Ä—ã—Ç–∏—è.
	ch := make(chan int) // üî¥ –Ω–µ–±—É—Ñ–µ—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª
	wg := &sync.WaitGroup{}
	wg.Add(3)

	for i := 0; i < 3; i++ {
		go func(v int) {
			defer wg.Done()
			ch <- v * v
		}(i)
	}

	// –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–¥–µ–ª—å–Ω—É—é –≥–æ—Ä—É—Ç–∏–Ω—É, –∫–æ—Ç–æ—Ä–∞—è –∂–¥—ë—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è wg.Wait() –∏ –ø–æ—Ç–æ–º –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –∫–∞–Ω–∞–ª:
	// –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫–∞–Ω–∞–ª –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –≥–æ—Ä—É—Ç–∏–Ω
	//go func() {
	//	wg.Wait()
	//	close(ch)
	//}()

	wg.Wait()
	var sum int
	for v := range ch { //  –ü—Ä–æ–±–ª–µ–º–∞: ch –Ω–µ –∑–∞–∫—Ä—ã—Ç ‚Äî range ch –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è.
		sum += v
	}
	fmt.Println(sum)
}
