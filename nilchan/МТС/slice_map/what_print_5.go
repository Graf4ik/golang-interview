package –ú–¢–°

func a(s []int) {
	s = append(s, 37) // 0 0 0 37
}
func b(m map[int]int) {
	m[3] = 33
}

// 1. –ß—Ç–æ –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å s –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏?
// 2. –ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –≤ println –¥–ª—è —Å–ª–∞–π—Å–∞ –∏ –¥–ª—è –º–∞–ø—ã?
func main() {
	s := make([]int, 3, 8) // 0 0 0
	m := make(map[int]int, 8)
	// add to slice
	a(s)
	println(s[3]) // ‚ùóÔ∏è panic: index out of range
	// add to map
	b(m)
	println(m[3]) // 33
}

// üìå 3. println(s[3])
//‚ùå –ü–∞–Ω–∏–∫–∞: index out of range [3] with length 3
// —Ç—ã –Ω–µ —É–≤–µ–ª–∏—á–∏–≤–∞–ª len(s), —Ç—ã –ø—Ä–æ—Å—Ç–æ –¥–µ–ª–∞–ª append –≤–Ω—É—Ç—Ä–∏ a, –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç. s[3] –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.
// s = make([]int, 3, 8) ‚Äî –¥–ª–∏–Ω–∞ 3, –∑–Ω–∞—á–∏—Ç –∏–Ω–¥–µ–∫—Å—ã 0,1,2. –î–æ—Å—Ç—É–ø –∫ s[3] –≤—ã–∑—ã–≤–∞–µ—Ç –ø–∞–Ω–∏–∫—É.

// ‚úî –ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:
// –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–π —Å–ª–∞–π—Å ‚Äî –ø–µ—Ä–µ–¥–∞–≤–∞–π —É–∫–∞–∑–∞—Ç–µ–ª—å –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–π –∑–Ω–∞—á–µ–Ω–∏–µ:
// func a(s *[]int) {
//	*s = append(*s, 37)
// }
//...
// a(&s)
// fmt.Println(s[3]) // —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–µ–Ω
