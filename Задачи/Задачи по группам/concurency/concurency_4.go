package concurency

//===========================================================
//–ó–∞–¥–∞—á–∞ 4
//1. –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç, —á—Ç–æ –Ω–µ —Ç–∞–∫, —á—Ç–æ –ø–æ–ø—Ä–∞–≤–∏—Ç—å?
//===========================================================

/*
‚ùó –ü–æ—á–µ–º—É –≤–æ–∑–Ω–∏–∫–∞–µ—Ç deadlock?
–ù–µ–±—É—Ñ–µ—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –±–ª–æ–∫–∏—Ä—É–µ—Ç send (ch <- true), –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—É—á–∞—Ç–µ–ª—è.
–ê –≤—ã –ø–∏—à–µ—Ç–µ –≤ –∫–∞–Ω–∞–ª –¥–æ –∑–∞–ø—É—Å–∫–∞ –≥–æ—Ä—É—Ç–∏–Ω—ã, –∫–æ—Ç–æ—Ä–∞—è –º–æ–≥–ª–∞ –±—ã —á–∏—Ç–∞—Ç—å.
–í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ: main-–≥–æ—Ä—É—Ç–∏–Ω–∞ –∑–∞–≤–∏—Å–∞–µ—Ç, –∞ –≥–æ—Ä—É—Ç–∏–Ω–∞ –¥–∞–∂–µ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è.
Go —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç —ç—Ç–æ –∏ –≤—ã–∑—ã–≤–∞–µ—Ç –ø–∞–Ω–∏–∫—É
*/

// –í–∞—Ä–∏–∞–Ω—Ç 1
func main() {
	ch := make(chan bool)
	ch <- true // (2) –ü–´–¢–ê–ï–ú–°–Ø –æ—Ç–ø—Ä–∞–≤–∏—Ç—å true ‚Äî –Ω–æ –ù–ò–ö–¢–û –Ω–µ —á–∏—Ç–∞–µ—Ç!
	// üí• DEADLOCK –Ω–∞ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–µ: main –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª—Å—è, –∞ –≥–æ—Ä—É—Ç–∏–Ω–∞ –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–Ω–∞!

	go func() {
		<-ch // (3) –ì–æ—Ä—É—Ç–∏–Ω–∞ –±—É–¥–µ—Ç —á–∏—Ç–∞—Ç—å ‚Äî –Ω–æ –¥–æ –Ω–µ—ë –¥–µ–ª–æ –Ω–µ –¥–æ—à–ª–æ
	}()
	ch <- true
}

// –í–∞—Ä–∏–∞–Ω—Ç 2
func main2() {
	ch := make(chan bool, 2) // –±—É—Ñ–µ—Ä –Ω–∞ 2 –∑–Ω–∞—á–µ–Ω–∏—è

	ch <- true // –∑–∞–ø–∏—Å—ã–≤–∞–µ–º ‚Äî –ù–ï –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è
	ch <- true // —Ç–æ–∂–µ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º

	go func() {
		<-ch
		<-ch
	}()
}

// –í–∞—Ä–∏–∞–Ω—Ç 3
func main3() {
	ch := make(chan bool, 2) // –±—É—Ñ–µ—Ä –Ω–∞ 2 –∑–Ω–∞—á–µ–Ω–∏—è

	ch <- true // –∑–∞–ø–∏—Å—ã–≤–∞–µ–º ‚Äî –ù–ï –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è
	ch <- true // —Ç–æ–∂–µ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º

	go func() {
		<-ch
		<-ch
	}()
}
